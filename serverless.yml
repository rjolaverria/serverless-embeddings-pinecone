service: serverless-embeddings-pgvector

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, 'dev'}
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_NAME: ${env:DB_NAME}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    EMBEDDING_MODEL: ${env:EMBEDDING_MODEL}
    SOURCES_BUCKET_NAME: ${construct:SourcesBucket.bucketName}
    EMBEDDINGS_QUEUE_URL: ${construct:EmbeddingsQueue.queueUrl}

constructs:
    SourcesBucket:
      type: storage
    EmbeddingsQueue:
      type: queue
      worker:
        handler: src/handlers/generate_embeddings.run
        timeout: 30
        maxConcurrency: 10 # keep db connections low
            
functions:
  enqueue:
    handler: src/handlers/enqueue.run
    events:
      - s3:
          bucket: ${construct:SourcesBucket.bucketName}
          event: s3:ObjectCreated:*
          rules:
            - prefix: raw/
            - suffix: .html
          existing: true
  testEmbeddings:
    handler: src/handlers/test_embeddings.run

plugins:
  - serverless-python-requirements
  - serverless-lift

custom:
  pythonRequirements:
    dockerizePip: true
